#Use this to source your custom script in your current .bashrc
#if [ -r ~/.bashrc_rogers ]; then
#    source ~/.bashrc_rogers
#fi

binPlaces=(
/bin
/sbin
/usr/bin
/usr/sbin
/usr/local/bin
/usr/local/sbin
)

for i in ${binPlaces[@]}
do
    echo $PATH|sed "s/:/\n/ig"|grep ^${i}$ > /dev/null 2>&1
    if [ "$?" -ne "0" ]; then
        # echo "${i} is not in PATH"
        if [ -d "${i}" ] ; then
            PATH="${i}:$PATH"
            # echo "${i} exists. adding it to PATH"
        # else
            # echo "${i} does not exists. skiping..."
        fi
    fi
done
export PATH

alias ls='ls --color=auto'

if [ "$TMUX" = "" ]; then 
    TERM=xterm-256color
fi

# JAVA_HOME=/opt/jdk1.7.0_51
# PATH=$PATH:$JAVA_HOME/bin

parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[96m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

whatismyip(){
    curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
}

pwdToSysClip(){
    echo -n $PWD | xclip -selection clipboard
}

catToMySysClip(){
    cat $1 | xclip -selection clipboard
}

nautilusHere(){
    nautilus "$PWD"
}

findBeagle(){
    while true; do sudo nmap -sT -p 22 $1 | grep -i -B4 "MAC Address: $2:"; done;
}

mdToHTML(){
    echo -e "<html>\n<head>\n<meta http-equiv="refresh" content="5">\n<style>\n\ntd, th, table{\n    border: solid 1px black;\n}\n\n</style>\n</head>"
    markdown $1 
    echo "</html>"
}

cdls(){
    cd "$@" && ls;
}

eth0Reset(){
    sudo ifconfig eth0 down && sleep 5 && sudo ifconfig eth0 up && ifconfig
}

getRoots(){
    sed -e 's@/.*@@' | uniq
}

killItAnyway(){
    while pgrep $1 ; do pkill $1 ; done;
    echo $1" was successful killed";
}

montarHD(){
    #run 'sudo blkid -s UUID' to get the list of drivers and partitions with teir UUID
    sudo mount UUID=738B34C677155CF4 /mnt/myDisk -t ntfs -o rw,auto,uid=1001,gid=1,dmode=775,fmode=775,fmask=0002,dmask=0002
}

getIP(){
    ip addr|grep -i $1":" -A2|grep "inet"|sed "s/^\s*inet\s\([0-9\.]\+\).*/\1/ig"|tr -d "\n"
}

runSshAgent(){
    #this command are needed to use ssh and all the uses it on cygwin. After run it, run 'ssh-add [pathToYourPrivKey]'
    eval `ssh-agent -s`
}

